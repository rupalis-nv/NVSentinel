# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  push:
    tags:
      - 'v*'
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - 'LICENSE'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.yaml'
      - '.github/*.yml'
      - '.github/headers/**'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Existing tag to create release from (e.g., v1.2.3)'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write      # Required for creating releases and uploading assets
  packages: write      # Required for publishing Helm charts to ghcr.io
  actions: read        # Required for downloading artifacts

jobs:
  build-image-list:
    runs-on: linux-amd64-cpu32
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref }}

      - name: Compute ref name with short SHA
        id: ref-name
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "value=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "value=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
            echo "value=${{ github.ref_name }}-${SHORT_SHA}" >> $GITHUB_OUTPUT
          fi

      - name: Build image list
        env:
          CI_COMMIT_REF_NAME: ${{ steps.ref-name.outputs.value }}
        run: |
          chmod +x ./scripts/build_image_list.sh
          ./scripts/build_image_list.sh
          cat versions.txt

      - name: Upload versions.txt
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4  # v5.0.0
        with:
          name: versions
          path: versions.txt
          retention-days: 90

  helm-publish:
    runs-on: linux-amd64-cpu4
    timeout-minutes: 45
    needs: build-image-list
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref }}

      - name: Install helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4  # v4.3.1
        with:
          version: 'latest'

      - name: Configure Helm for GitHub Packages
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Compute ref name with short SHA
        id: ref-name
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "value=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "value=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
            echo "value=${{ github.ref_name }}-${SHORT_SHA}" >> $GITHUB_OUTPUT
          fi

      - name: Package and publish Helm chart
        env:
          CI_COMMIT_REF_NAME: ${{ steps.ref-name.outputs.value }}
          CI_COMMIT_TAG: ${{ steps.ref-name.outputs.value }}
          HELM_REGISTRY_TYPE: oci
          HELM_OCI_REGISTRY: ghcr.io
          HELM_OCI_REPOSITORY: nvidia
        run: make -C distros/kubernetes helm-publish

  create-github-release:
    runs-on: linux-amd64-cpu4
    timeout-minutes: 15
    needs:
      - build-image-list
      - helm-publish
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref }}

      - name: Download versions.txt
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53  # v6.0.0
        with:
          name: versions
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090  # v2.4.1
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name }}
          name: Release ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name }}
          body: |
            Release ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name }}

            ## Container Images

            See versions.txt for the full list of container images and versions.

            ## Helm Chart

            Install with:
            ```
            helm install nvsentinel oci://ghcr.io/nvidia/nvsentinel --version ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name }}
            ```
          files: |
            versions.txt
          draft: false
          prerelease: ${{ contains(github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name, '-') }}
