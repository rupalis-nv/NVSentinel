---
# ClusterImagePolicy for verifying NVSentinel container images
#
# SCOPE: This policy ONLY applies to images matching ghcr.io/nvidia/nvsentinel/**
#        - Other images in the namespace are NOT verified or blocked
#        - Development images (localhost:*) are NOT subject to this policy
#        - Third-party images (databases, sidecars, etc.) are NOT affected
#
# This policy uses Sigstore Policy Controller to verify that NVSentinel images
# have valid SLSA Build Provenance attestations signed by the official 
# GitHub Actions workflow using keyless signing with Fulcio/Rekor.
#
# Configuration required:
# 1. Label namespace: kubectl label namespace nvsentinel policy.sigstore.dev/include=true
# 2. Configure no-match-policy to allow non-matching images:
#    kubectl create configmap config-policy-controller -n cosign-system \
#      --from-literal=no-match-policy=allow --dry-run=client -o yaml | kubectl apply -f -
apiVersion: policy.sigstore.dev/v1beta1
kind: ClusterImagePolicy
metadata:
  name: verify-nvsentinel-image-attestation
  annotations:
    description: >-
      Verifies that NVSentinel container images have valid SLSA Build 
      Provenance attestations signed by the official GitHub Actions workflow. 
      Ensures images were built from the official NVIDIA/NVSentinel repository 
      with proper attestations before allowing them to run in the cluster.
      Only applies to ghcr.io/nvidia/nvsentinel/** images.
    category: Supply Chain Security
    severity: high
spec:
  # WARN MODE: Currently in warn mode due to bundle format v0.3 incompatibility
  # Policy Controller 0.10.5 cannot read Sigstore bundle format v0.3
  # Will be changed to enforce mode when Policy Controller adds v0.3 support
  mode: warn
  
  # Match ONLY official NVSentinel images from GHCR
  # This glob pattern ensures only NVSentinel images are verified
  # All other images (third-party, development, etc.) are not affected
  images:
    - glob: "ghcr.io/nvidia/nvsentinel/**"
  
  # Define the authorities that can sign the images
  authorities:
    - name: github-actions-keyless
      keyless:
        # Use public Sigstore Fulcio instance
        url: https://fulcio.sigstore.dev
        # Match the GitHub Actions OIDC identity
        # Matches both branch refs (refs/heads/*) and tag refs (refs/tags/*)
        identities:
          - issuer: https://token.actions.githubusercontent.com
            subjectRegExp: ^https://github\.com/NVIDIA/NVSentinel/\.github/workflows/publish\.yml@refs/(heads|tags)/
      # Use public Sigstore Rekor instance for transparency log
      ctlog:
        url: https://rekor.sigstore.dev
      # Validate SLSA Build Provenance attestations
      attestations:
        - name: slsa-provenance
          predicateType: https://slsa.dev/provenance/v1
          policy:
            type: cue
            data: |
              // Validate the builder is the official GitHub Actions workflow
              predicateType: "https://slsa.dev/provenance/v1"
              predicate: buildDefinition: {
                buildType: "https://slsa-framework.github.io/github-actions-buildtypes/workflow/v1"
                externalParameters: {
                  workflow: {
                    ref: =~"^refs/(heads|tags)/"
                    repository: "https://github.com/NVIDIA/NVSentinel"
                  }
                }
                internalParameters: {
                  github: {
                    event_name: "push" | "workflow_dispatch" | "release"
                  }
                }
              }
              
              // Validate the source repository
              predicate: runDetails: {
                builder: {
                  id: =~"^https://github.com/NVIDIA/NVSentinel/"
                }
              }
